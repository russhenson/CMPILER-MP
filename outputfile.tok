program	RESERVED
parserTest	IDENTIFIER
;	SEMICOLON
const	RESERVED
gun	IDENTIFIER
=	EQUALS
5	INTEGER
;	SEMICOLON
var	RESERVED
x	IDENTIFIER
:	COLON
integer	DATA_TYPE
;	SEMICOLON
function	RESERVED
testOne	IDENTIFIER
(	OPEN_PAREN
y	IDENTIFIER
,	COMMA
z	IDENTIFIER
:	COLON
integer	DATA_TYPE
;	SEMICOLON
gun	IDENTIFIER
:	COLON
string	DATA_TYPE
)	CLOSE_PAREN
:	COLON
void	VOID
;	SEMICOLON
var	RESERVED
g	IDENTIFIER
:	COLON
string	DATA_TYPE
;	SEMICOLON
begin	RESERVED
g	IDENTIFIER
:=	COLON_EQUALS
gun	IDENTIFIER
;	SEMICOLON
writeln	PREDECLARED
(	OPEN_PAREN
'Gun 2 '	STRING
,	COMMA
g	IDENTIFIER
)	CLOSE_PAREN
;	SEMICOLON
writeln	PREDECLARED
(	OPEN_PAREN
'Y is '	STRING
,	COMMA
y	IDENTIFIER
)	CLOSE_PAREN
;	SEMICOLON
writeln	PREDECLARED
(	OPEN_PAREN
'z is '	STRING
,	COMMA
z	IDENTIFIER
)	CLOSE_PAREN
;	SEMICOLON
end	RESERVED
;	SEMICOLON
function	RESERVED
testTwo	IDENTIFIER
(	OPEN_PAREN
)	CLOSE_PAREN
:	COLON
integer	DATA_TYPE
;	SEMICOLON
begin	RESERVED
testTwo	IDENTIFIER
:=	COLON_EQUALS
2	INTEGER
;	SEMICOLON
end	RESERVED
;	SEMICOLON
begin	RESERVED
testOne	IDENTIFIER
(	OPEN_PAREN
testTwo	IDENTIFIER
(	OPEN_PAREN
)	CLOSE_PAREN
,	COMMA
3	INTEGER
+	PLUS
1	INTEGER
,	COMMA
'banzai' 	STRING
)	CLOSE_PAREN
;	SEMICOLON
end	RESERVED
.	PERIOD
