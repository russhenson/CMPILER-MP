{	OPEN_CURLY_BRACE
this	IDENTIFIER
is	IDENTIFIER
a	IDENTIFIER
comment	IDENTIFIER
}	ERROR
]	CLOSE_BRACKET
program	RESERVED
proglan_scanner	IDENTIFIER
;	SEMICOLON
var	RESERVED
sampleIdentifier123	IDENTIFIER
:	COLON
real	PREDECLARED
;	SEMICOLON
y	IDENTIFIER
:	COLON
boolean	PREDECLARED
;	SEMICOLON
z	IDENTIFIER
,	COMMA
p	IDENTIFIER
,	COMMA
input	IDENTIFIER
:	COLON
integer	PREDECLARED
;	SEMICOLON
function	RESERVED
performFunction	IDENTIFIER
(	OPEN_PAREN
const	RESERVED
x	IDENTIFIER
:	COLON
integer	PREDECLARED
)	CLOSE_PAREN
:	COLON
integer	PREDECLARED
;	SEMICOLON
begin	RESERVED
sampleIdentifier123	IDENTIFIER
:=	COLON_EQUALS
999.9	REAL
;	SEMICOLON
y	IDENTIFIER
:=	COLON_EQUALS
(	OPEN_PAREN
5	INTEGER
>	LESS_THAN
4	INTEGER
and:	BOOL_AND
true	PREDECLARED
)	CLOSE_PAREN
or:	BOOL_OR
(	OPEN_PAREN
false	PREDECLARED
and:	BOOL_AND
not:	BOOL_NOT
(	OPEN_PAREN
x	IDENTIFIER
=	EQUALS
0	INTEGER
)	CLOSE_PAREN
)	CLOSE_PAREN
;	SEMICOLON
writeln	PREDECLARED
(	OPEN_PAREN
"	DOUBLE_QUOTE
Please	IDENTIFIER
input	IDENTIFIER
a	IDENTIFIER
number	IDENTIFIER
:	COLON
"	DOUBLE_QUOTE
)	CLOSE_PAREN
;	SEMICOLON
readln	PREDECLARED
(	OPEN_PAREN
input	IDENTIFIER
)	CLOSE_PAREN
;	SEMICOLON
x	IDENTIFIER
:=	COLON_EQUALS
input	IDENTIFIER
;	SEMICOLON
z	IDENTIFIER
:=	COLON_EQUALS
input	IDENTIFIER
;	SEMICOLON
if	RESERVED
(	OPEN_PAREN
x	IDENTIFIER
<>	NOT_EQUAL
0	INTEGER
)	CLOSE_PAREN
then	RESERVED
begin	RESERVED
end	RESERVED
;	SEMICOLON
else	RESERVED
begin	RESERVED
end	RESERVED
;	SEMICOLON
for	RESERVED
n	IDENTIFIER
:=	COLON_EQUALS
0	INTEGER
to	RESERVED
x	IDENTIFIER
do	RESERVED
begin	RESERVED
for	RESERVED
i	IDENTIFIER
:=	COLON_EQUALS
0	INTEGER
to	RESERVED
x	IDENTIFIER
do	RESERVED
begin	RESERVED
writeln	PREDECLARED
(	OPEN_PAREN
"	DOUBLE_QUOTE
Hello	IDENTIFIER
World	IDENTIFIER
"	DOUBLE_QUOTE
,	COMMA
input	IDENTIFIER
)	CLOSE_PAREN
;	SEMICOLON
end	RESERVED
;	SEMICOLON
end	RESERVED
;	SEMICOLON
p	IDENTIFIER
=	EQUALS
0	INTEGER
;	SEMICOLON
performFunction	IDENTIFIER
:=	COLON_EQUALS
z	IDENTIFIER
;	SEMICOLON
end	RESERVED
;	SEMICOLON
begin	RESERVED
x	IDENTIFIER
=	EQUALS
performFunction	IDENTIFIER
(	OPEN_PAREN
x	IDENTIFIER
)	CLOSE_PAREN
;	SEMICOLON
writeln	PREDECLARED
(	OPEN_PAREN
'	SINGLE_QUOTE
Value	IDENTIFIER
of	RESERVED
X	IDENTIFIER
:	COLON
'	SINGLE_QUOTE
,	COMMA
x	IDENTIFIER
)	CLOSE_PAREN
;	SEMICOLON
writeln	PREDECLARED
(	OPEN_PAREN
'	SINGLE_QUOTE
Value	IDENTIFIER
of	RESERVED
P	IDENTIFIER
:	COLON
'	SINGLE_QUOTE
,	COMMA
p	IDENTIFIER
)	CLOSE_PAREN
;	SEMICOLON
end	RESERVED
.	PERIOD
