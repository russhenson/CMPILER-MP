program	RESERVED
parserTest	IDENTIFIER
;	SEMICOLON
const	RESERVED
gun	IDENTIFIER
=	EQUALS
5	INTEGER
;	SEMICOLON
var	RESERVED
x	IDENTIFIER
,	COMMA
i	IDENTIFIER
,	COMMA
j	IDENTIFIER
,	COMMA
sum	IDENTIFIER
:	COLON
integer	DATA_TYPE
;	SEMICOLON
hun	IDENTIFIER
:	COLON
array	RESERVED
[	OPEN_BRACKET
1	INTEGER
..	UP_UNTIL
3	INTEGER
]	CLOSE_BRACKET
of	RESERVED
integer	DATA_TYPE
;	SEMICOLON
c	IDENTIFIER
:	COLON
char	DATA_TYPE
;	SEMICOLON
function	RESERVED
test	IDENTIFIER
(	OPEN_PAREN
x	IDENTIFIER
:	COLON
integer	DATA_TYPE
)	CLOSE_PAREN
:	COLON
integer	DATA_TYPE
;	SEMICOLON
begin	RESERVED
if	RESERVED
(	OPEN_PAREN
x	IDENTIFIER
<=	LESS_EQUAL
1	INTEGER
)	CLOSE_PAREN
then	RESERVED
begin	RESERVED
test	IDENTIFIER
:=	COLON_EQUALS
x	IDENTIFIER
;	SEMICOLON
end	RESERVED
else	RESERVED
begin	RESERVED
test	IDENTIFIER
:=	COLON_EQUALS
test	IDENTIFIER
(	OPEN_PAREN
x	IDENTIFIER
-	MINUS
1	INTEGER
)	CLOSE_PAREN
+	PLUS
test	IDENTIFIER
(	OPEN_PAREN
x	IDENTIFIER
-	MINUS
2	INTEGER
)	CLOSE_PAREN
;	SEMICOLON
end	RESERVED
;	SEMICOLON
end	RESERVED
;	SEMICOLON
begin	RESERVED
fh	IDENTIFIER
:=	COLON_EQUALS
5	INTEGER
;	SEMICOLON
end	RESERVED
.	PERIOD
